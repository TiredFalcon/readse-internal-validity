ResponseId,qid,res,Qlevel,was_rev,freDelta,fkglDelta,from.text,to.text,from.FRE,from.FKG,to.FRE,to.FKG
R_29vru7q5CJ98yzq,5eb234c6deb70a6af2260959,Somewhat disagree,Bachelor's degree,True,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_1qe49WBdYQHVIC0,5eb234c6deb70a6af2260959,Somewhat agree,PhD,True,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_1rdCf8KahWgDe0e,5eb234c6deb70a6af2260959,Somewhat disagree,Bachelor's degree,True,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_29vru7q5CJ98yzq,5eb234c6deb70a6af225fbb3,Somewhat agree,Bachelor's degree,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_11i4q1oXXFExHeY,5eb234c6deb70a6af225fbb3,Somewhat disagree,PhD,False,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_UxojytqMVae2qtP,5eb234c6deb70a6af225fbb3,Somewhat disagree,Bachelor's degree,False,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_x3frHDHnq8LQsQp,5eb234c6deb70a6af225fbb3,Somewhat disagree,PhD,False,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_1qe49WBdYQHVIC0,5eb233fadeb70a6af2237939,Neither agree nor disagree,PhD,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_3rSYx78iHZJXiHP,5eb233fadeb70a6af2237939,Somewhat disagree,Master's degree,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_11i4q1oXXFExHeY,5eb233fadeb70a6af2237939,Somewhat disagree,PhD,False,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_x3frHDHnq8LQsQp,5eb233fadeb70a6af2237939,Somewhat agree,PhD,False,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_1qe49WBdYQHVIC0,5eb23451deb70a6af224dcd2,Somewhat disagree,PhD,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_11i4q1oXXFExHeY,5eb23451deb70a6af224dcd2,Somewhat agree,PhD,False,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_UxojytqMVae2qtP,5eb23451deb70a6af224dcd2,Strongly agree,Bachelor's degree,False,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_yBzrUpnniw4HCkp,5eb23451deb70a6af224dcd2,Strongly agree,Master's degree,False,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_1qe49WBdYQHVIC0,5eb23455deb70a6af2250d84,Somewhat agree,PhD,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_3rSYx78iHZJXiHP,5eb23455deb70a6af2250d84,Somewhat disagree,Master's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_ZpEApncngPZN9Rf,5eb23455deb70a6af2250d84,Somewhat agree,Master's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_2sbbcOtHAuRI4I9,5eb23455deb70a6af2250d84,Strongly disagree,PhD,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_x3frHDHnq8LQsQp,5eb23455deb70a6af2250d84,Strongly agree,PhD,False,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_1rdCf8KahWgDe0e,5eb23455deb70a6af2250d84,Somewhat agree,Bachelor's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_1qe49WBdYQHVIC0,5eb234b5deb70a6af225d7d1,Somewhat agree,PhD,False,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_3rSYx78iHZJXiHP,5eb234b5deb70a6af225d7d1,Somewhat disagree,Master's degree,False,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_vBNcuWBjpxCxW2l,5eb234b5deb70a6af225d7d1,Somewhat agree,PhD,True,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_1qe49WBdYQHVIC0,5eb23451deb70a6af224e429,Somewhat agree,PhD,False,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_UxojytqMVae2qtP,5eb23451deb70a6af224e429,Somewhat agree,Bachelor's degree,False,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_yBzrUpnniw4HCkp,5eb23451deb70a6af224e429,Somewhat agree,Master's degree,True,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_1qe49WBdYQHVIC0,5eb23451deb70a6af224d789,Somewhat agree,PhD,False,-24.218636363636392,6.607575757575756,"In addition to that, we used lexical patterns to identify candidate remedy commits. While these lexical patterns can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.","While the lexical pattern defined to automatically identify remedy commits can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.",25.795000000000044,14.630000000000003,1.5763636363636522,21.237575757575758
R_2Sf8jHwzSbFraR2,5eb23451deb70a6af224d789,Neither agree nor disagree,Professor,True,-24.218636363636392,6.607575757575756,"In addition to that, we used lexical patterns to identify candidate remedy commits. While these lexical patterns can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.","While the lexical pattern defined to automatically identify remedy commits can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.",25.795000000000044,14.630000000000003,1.5763636363636522,21.237575757575758
R_11i4q1oXXFExHeY,5eb23451deb70a6af224d789,Somewhat disagree,PhD,True,-24.218636363636392,6.607575757575756,"In addition to that, we used lexical patterns to identify candidate remedy commits. While these lexical patterns can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.","While the lexical pattern defined to automatically identify remedy commits can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.",25.795000000000044,14.630000000000003,1.5763636363636522,21.237575757575758
R_1qe49WBdYQHVIC0,5eb23455deb70a6af22507c3,Somewhat disagree,PhD,True,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_ZpEApncngPZN9Rf,5eb23455deb70a6af22507c3,Strongly agree,Master's degree,True,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_11i4q1oXXFExHeY,5eb23455deb70a6af22507c3,Strongly disagree,PhD,False,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_yBzrUpnniw4HCkp,5eb23455deb70a6af22507c3,Neither agree nor disagree,Master's degree,False,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_1qe49WBdYQHVIC0,5eb234b5deb70a6af225dbd8,Somewhat agree,PhD,False,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_3rSYx78iHZJXiHP,5eb234b5deb70a6af225dbd8,Strongly disagree,Master's degree,False,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_ZpEApncngPZN9Rf,5eb234b5deb70a6af225dbd8,Strongly disagree,Master's degree,False,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_1qe49WBdYQHVIC0,5eb234c6deb70a6af2261c0c,Somewhat agree,PhD,False,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_2Sf8jHwzSbFraR2,5eb234c6deb70a6af2261c0c,Somewhat agree,Professor,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_ZpEApncngPZN9Rf,5eb234c6deb70a6af2261c0c,Somewhat agree,Master's degree,False,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_2sbbcOtHAuRI4I9,5eb234c6deb70a6af2261c0c,Neither agree nor disagree,PhD,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_1rdCf8KahWgDe0e,5eb234c6deb70a6af2261c0c,Somewhat disagree,Bachelor's degree,False,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_3rSYx78iHZJXiHP,5eb23451deb70a6af224df39,Somewhat disagree,Master's degree,False,-19.052714741398944,5.721414900888583,"Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers. To mitigate subjectivity bias in such a process, every commit was assigned to two authors who manually analyzed it independently. Then, in the case of a disagreement, a third author was assigned to the commit to solve the conflict.","Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers.",22.570346320346346,16.48753246753247,3.5176315789474017,22.208947368421054
R_UxojytqMVae2qtP,5eb23451deb70a6af224df39,Neither agree nor disagree,Bachelor's degree,False,-19.052714741398944,5.721414900888583,"Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers. To mitigate subjectivity bias in such a process, every commit was assigned to two authors who manually analyzed it independently. Then, in the case of a disagreement, a third author was assigned to the commit to solve the conflict.","Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers.",22.570346320346346,16.48753246753247,3.5176315789474017,22.208947368421054
R_vBNcuWBjpxCxW2l,5eb23451deb70a6af224df39,Strongly agree,PhD,False,-19.052714741398944,5.721414900888583,"Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers. To mitigate subjectivity bias in such a process, every commit was assigned to two authors who manually analyzed it independently. Then, in the case of a disagreement, a third author was assigned to the commit to solve the conflict.","Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers.",22.570346320346346,16.48753246753247,3.5176315789474017,22.208947368421054
R_3rSYx78iHZJXiHP,5eb234c6deb70a6af2261837,Strongly agree,Master's degree,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_ZpEApncngPZN9Rf,5eb234c6deb70a6af2261837,Strongly agree,Master's degree,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_11i4q1oXXFExHeY,5eb234c6deb70a6af2261837,Somewhat disagree,PhD,True,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_x3frHDHnq8LQsQp,5eb234c6deb70a6af2261837,Strongly disagree,PhD,True,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_yBzrUpnniw4HCkp,5eb234c6deb70a6af2261837,Somewhat agree,Master's degree,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_vBNcuWBjpxCxW2l,5eb234c6deb70a6af2261837,Somewhat agree,PhD,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_3rSYx78iHZJXiHP,5eb233fadeb70a6af22379bf,Somewhat agree,Master's degree,True,0.832690794649892,2.368135326514558,"After obtaining all the commits with refactoring operations, we filtered out commits involved in more than one refactoring type, to avoid the impact of irrelevant refactorings when assessing the naturalness change.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",3.440967741935509,20.480645161290322,4.273658536585401,22.84878048780488
R_3rSYx78iHZJXiHP,5eb23451deb70a6af224d76a,Somewhat disagree,Master's degree,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_vBNcuWBjpxCxW2l,5eb23451deb70a6af224d76a,Neither agree nor disagree,PhD,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_3rSYx78iHZJXiHP,5eb23452deb70a6af224fd92,Somewhat disagree,Master's degree,True,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_2Sf8jHwzSbFraR2,5eb23452deb70a6af224fd92,Somewhat agree,Professor,False,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_UxojytqMVae2qtP,5eb23452deb70a6af224fd92,Somewhat agree,Bachelor's degree,False,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_3rSYx78iHZJXiHP,5eb234c6deb70a6af225fed1,Strongly agree,Master's degree,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_2sbbcOtHAuRI4I9,5eb234c6deb70a6af225fed1,Neither agree nor disagree,PhD,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_yBzrUpnniw4HCkp,5eb234c6deb70a6af225fed1,Somewhat agree,Master's degree,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_vBNcuWBjpxCxW2l,5eb234c6deb70a6af225fed1,Neither agree nor disagree,PhD,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_2Sf8jHwzSbFraR2,5eb233fadeb70a6af2237a20,Neither agree nor disagree,Professor,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_yBzrUpnniw4HCkp,5eb233fadeb70a6af2237a20,Strongly disagree,Master's degree,True,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_2Sf8jHwzSbFraR2,5eb234b5deb70a6af225d63e,Somewhat agree,Professor,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_vBNcuWBjpxCxW2l,5eb234b5deb70a6af225d63e,Somewhat agree,PhD,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_1rdCf8KahWgDe0e,5eb234b5deb70a6af225d63e,Somewhat agree,Bachelor's degree,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_2Sf8jHwzSbFraR2,5eb23431deb70a6af2247fa8,Neither agree nor disagree,Professor,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2sbbcOtHAuRI4I9,5eb23431deb70a6af2247fa8,Somewhat disagree,PhD,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_11i4q1oXXFExHeY,5eb23431deb70a6af2247fa8,Somewhat agree,PhD,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2Sf8jHwzSbFraR2,5eb23452deb70a6af224f45e,Somewhat agree,Professor,False,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_ZpEApncngPZN9Rf,5eb23452deb70a6af224f45e,Strongly agree,Master's degree,True,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_2Sf8jHwzSbFraR2,5eb23455deb70a6af2251726,Neither agree nor disagree,Professor,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2sbbcOtHAuRI4I9,5eb23455deb70a6af2251726,Somewhat disagree,PhD,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_UxojytqMVae2qtP,5eb23455deb70a6af2251726,Neither agree nor disagree,Bachelor's degree,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_yBzrUpnniw4HCkp,5eb23455deb70a6af2251726,Somewhat agree,Master's degree,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_1rdCf8KahWgDe0e,5eb23455deb70a6af2251726,Strongly agree,Bachelor's degree,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2Sf8jHwzSbFraR2,5eb234c6deb70a6af2260571,Somewhat agree,Professor,False,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_UxojytqMVae2qtP,5eb234c6deb70a6af2260571,Somewhat agree,Bachelor's degree,False,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_2Sf8jHwzSbFraR2,5eb234b5deb70a6af225f65a,Somewhat disagree,Professor,False,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_UxojytqMVae2qtP,5eb234b5deb70a6af225f65a,Strongly agree,Bachelor's degree,True,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_ZpEApncngPZN9Rf,5eb234b5deb70a6af225f6fd,Strongly disagree,Master's degree,True,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_2sbbcOtHAuRI4I9,5eb234b5deb70a6af225f6fd,Strongly disagree,PhD,True,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_11i4q1oXXFExHeY,5eb234b5deb70a6af225f6fd,Somewhat disagree,PhD,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_yBzrUpnniw4HCkp,5eb234b5deb70a6af225f6fd,Neither agree nor disagree,Master's degree,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_ZpEApncngPZN9Rf,5eb23451deb70a6af224dc9a,Strongly agree,Master's degree,False,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_yBzrUpnniw4HCkp,5eb23451deb70a6af224dc9a,Somewhat disagree,Master's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_2sbbcOtHAuRI4I9,5eb23431deb70a6af2248142,Somewhat agree,PhD,False,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_UxojytqMVae2qtP,5eb23431deb70a6af2248142,Strongly agree,Bachelor's degree,True,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_x3frHDHnq8LQsQp,5eb23431deb70a6af2248142,Somewhat agree,PhD,True,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_2sbbcOtHAuRI4I9,5eb234c6deb70a6af225fee2,Neither agree nor disagree,PhD,False,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_11i4q1oXXFExHeY,5eb234c6deb70a6af225fee2,Neither agree nor disagree,PhD,True,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_UxojytqMVae2qtP,5eb234c6deb70a6af225fee2,Neither agree nor disagree,Bachelor's degree,False,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_yBzrUpnniw4HCkp,5eb234c6deb70a6af225fee2,Neither agree nor disagree,Master's degree,True,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_1rdCf8KahWgDe0e,5eb234c6deb70a6af225fee2,Somewhat agree,Bachelor's degree,False,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_11i4q1oXXFExHeY,5eb23455deb70a6af225135a,Neither agree nor disagree,PhD,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_vBNcuWBjpxCxW2l,5eb23455deb70a6af225135a,Neither agree nor disagree,PhD,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_x3frHDHnq8LQsQp,5eb23452deb70a6af224face,Strongly disagree,PhD,False,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_vBNcuWBjpxCxW2l,5eb23452deb70a6af224face,Strongly disagree,PhD,False,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_3j6j0BQtCMvAnnu,5eb233fadeb70a6af22379bf,Somewhat agree,Master's degree,True,0.832690794649892,2.368135326514558,"After obtaining all the commits with refactoring operations, we filtered out commits involved in more than one refactoring type, to avoid the impact of irrelevant refactorings when assessing the naturalness change.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",3.440967741935509,20.480645161290322,4.273658536585401,22.84878048780488
R_2flXhbfNu9VL2p8,5eb233fadeb70a6af22379bf,Neither agree nor disagree,Professor,False,0.832690794649892,2.368135326514558,"After obtaining all the commits with refactoring operations, we filtered out commits involved in more than one refactoring type, to avoid the impact of irrelevant refactorings when assessing the naturalness change.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",3.440967741935509,20.480645161290322,4.273658536585401,22.84878048780488
R_3oGCHD9qcEOjEKR,5eb233fadeb70a6af22379bf,Strongly disagree,PhD,False,0.832690794649892,2.368135326514558,"After obtaining all the commits with refactoring operations, we filtered out commits involved in more than one refactoring type, to avoid the impact of irrelevant refactorings when assessing the naturalness change.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",3.440967741935509,20.480645161290322,4.273658536585401,22.84878048780488
R_3j6j0BQtCMvAnnu,5eb23431deb70a6af2248142,Somewhat disagree,Master's degree,False,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_RfYDkz12aApKVuF,5eb23431deb70a6af2248142,Somewhat disagree,Bachelor's degree,False,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_2t3j9LGzc1rnx28,5eb23431deb70a6af2248142,Strongly disagree,PhD,False,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_2azQGqyzdiTkvn2,5eb23431deb70a6af2248142,Somewhat disagree,Professor,True,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_27lOIpRqcbfjcfD,5eb23431deb70a6af2248142,Strongly agree,PhD,True,-24.596622807017553,8.606315789473687,"The opinion miner is in charge of analyzing the sentences classified as relevant of the APIs opinion mining (i.e., those assigned to an aspect by the aspect classifier to identify the sentiment of the opinion (i.e.,positive or negative). Based on what discussed in Section 2. Also in this case we investigated two different options for the implementation of the opinion miner, and we evaluate their performance as described in Section 4 to pick the best one for our approach.","The opinion miner is in charge of analyzing the sentences stored by fine-grained liker in the database to identify the ones reporting opinions and classify the quality aspect(s) discussed in them (e.g., performance) and the sentiment of the opinion (i.e.,positive, neutral, or negative). Based on what discussed in Section 2 (i.e., sentiment analysis tools are unsuitable for our purpose), we decided to follow a totally different path for the implementation of the opinion miner (but then also compare it with state-of-the-art sentiment analysis tools, as it will be shown in Section 5).",21.143333333333345,16.935000000000002,-3.453289473684208,25.54131578947369
R_3j6j0BQtCMvAnnu,5eb23451deb70a6af224dc9a,Somewhat disagree,Master's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_5gRs3GUMGwIrEuB,5eb23451deb70a6af224dc9a,Strongly agree,Master's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_RfYDkz12aApKVuF,5eb23451deb70a6af224dc9a,Somewhat agree,Bachelor's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_2azQGqyzdiTkvn2,5eb23451deb70a6af224dc9a,Somewhat agree,Professor,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_27lOIpRqcbfjcfD,5eb23451deb70a6af224dc9a,Neither agree nor disagree,PhD,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_eSf9paDm2rsJ9sd,5eb23451deb70a6af224dc9a,Somewhat disagree,PhD,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_2fv6Pk7Rjmr7FVf,5eb23451deb70a6af224dc9a,Somewhat disagree,PhD,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_1hySrlplH6qf42Z,5eb23451deb70a6af224dc9a,Strongly agree,Master's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_2f2tFJpolzgEViB,5eb23451deb70a6af224dc9a,Neither agree nor disagree,Master's degree,True,-8.864926470588216,3.596544117647058,"Rodriguez-Perez et al. conducted two case studies and studied the Time To Notify (TNN) metric which describes how much time it takes for a bug to be notified/reported since the bug was introduced into the source code. They examine how this metric is related to software maintenance and evolution. Interestingly, they found relatively high mean values of TTN in the projects: 312 and 431 days.",Rodriguez-Perez et al. conducted two case studies to introduce a metric Time To Notify(TNN) which describe how much time it takes for a bug to be notified/reported since the bug was introduced into the source code and examine how this metric is related to the software maintenance and evolution.,50.47625000000002,10.193750000000003,41.611323529411806,13.790294117647061
R_3j6j0BQtCMvAnnu,5eb23452deb70a6af224f45e,Somewhat agree,Master's degree,True,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_5gRs3GUMGwIrEuB,5eb23452deb70a6af224f45e,Somewhat agree,Master's degree,True,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_2sXVfZ8M2bTm0sA,5eb23452deb70a6af224f45e,Strongly disagree,PhD,False,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_27lOIpRqcbfjcfD,5eb23452deb70a6af224f45e,Strongly agree,PhD,True,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_2ASVLC9oTQeLJaR,5eb23452deb70a6af224f45e,Somewhat disagree,Bachelor's degree,False,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_2fv6Pk7Rjmr7FVf,5eb23452deb70a6af224f45e,Strongly agree,PhD,False,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_2QiKL3vV8VYIJkJ,5eb23452deb70a6af224f45e,Somewhat agree,Bachelor's degree,True,-55.94203846153843,21.59053846153846,"In our dataset we have many more not-reused than reused answers. In order to keep into account such a strong unbalancing, we experimented each machine learning technique when (i) not balancing the training sets; (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter; and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.","To keep into account the strong unbalancing of our dataset (i.e., we have many more not-reused than reused answers), we experimented each model when (i) not balancing the training sets, (ii) balancing the training sets by under-sampling the majority class by means of the Weka implementations of the SpreadSubSample filter, and (iii) balancing the training sets by generating artificial instances of the minority class by means of the Weka implementation of the SMOTE filter.",27.604038461538494,14.25346153846154,-28.337999999999937,35.844
R_3j6j0BQtCMvAnnu,5eb23452deb70a6af224fd92,Strongly agree,Master's degree,False,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_2sXVfZ8M2bTm0sA,5eb23452deb70a6af224fd92,Strongly agree,PhD,True,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_2t3j9LGzc1rnx28,5eb23452deb70a6af224fd92,Somewhat agree,PhD,False,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_27lOIpRqcbfjcfD,5eb23452deb70a6af224fd92,Somewhat agree,PhD,False,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_2ALKUVr0LclXonG,5eb23452deb70a6af224fd92,Somewhat disagree,Master's degree,True,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_2f2tFJpolzgEViB,5eb23452deb70a6af224fd92,Somewhat agree,Master's degree,True,-14.38835089773616,4.946615925058548,"Table 1 shows the number of identified clones. We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), such a noise should be quite limited.","We found that, out of the 500 snippets considered as non-leveraged, only 30 (4%) have at least one detected clone in the considered GitHub files. Thus, while we acknowledge a certain level of noise in our analysis (i.e., misclassification of leveraged snippets as non-leveraged), we believe that the findings reported in the following are unlikely to be substantially influenced by such a noise.",30.77404761904765,13.604285714285716,16.38569672131149,18.550901639344264
R_3j6j0BQtCMvAnnu,5eb23455deb70a6af2250d84,Somewhat disagree,Master's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_5gRs3GUMGwIrEuB,5eb23455deb70a6af2250d84,Somewhat agree,Master's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_RfYDkz12aApKVuF,5eb23455deb70a6af2250d84,Somewhat agree,Bachelor's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_2t3j9LGzc1rnx28,5eb23455deb70a6af2250d84,Strongly disagree,PhD,False,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_2f2tFJpolzgEViB,5eb23455deb70a6af2250d84,Somewhat agree,Master's degree,True,-22.39736434108525,7.098828596037897,"In most cases, the change occurred in the form of a comment update (113), while in a few cases (12) a new comment was added. We observed three main reasons why developers update comments: (i) the comment wrongly describes the application logic (35), due to an error done when the comment was written in the first place or to an inconsistency introduced during the code evolution (in these cases we were not able to trace back to the specific cause of the problem); (ii) the comment needs to be updated as a consequence of a new implementation logic (25); (iii) the comment is improved to explain the actual implementation in more details (53).","In most cases, a change occurred in a comment update (113), while in a few cases (12) a new comment was added. For updates, which were in most cases closely related to an inconsistency, we observed three main reasons why developers updated comments: (i) the comment was wrong before (35) (i.e., it was already wrong when it was first added, or it became outdated after a change), (ii) they updated the comment together/following a new implementation (25), (iii) they wanted to explain the actual implementation (53) in more detail.",39.99666666666667,14.38814814814815,17.59930232558142,21.486976744186048
R_3j6j0BQtCMvAnnu,5eb234b5deb70a6af225f65a,Somewhat agree,Master's degree,True,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_2sXVfZ8M2bTm0sA,5eb234b5deb70a6af225f65a,Strongly agree,PhD,True,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_2t3j9LGzc1rnx28,5eb234b5deb70a6af225f65a,Somewhat disagree,PhD,False,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_2azQGqyzdiTkvn2,5eb234b5deb70a6af225f65a,Somewhat agree,Professor,True,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_2ALKUVr0LclXonG,5eb234b5deb70a6af225f65a,Neither agree nor disagree,Master's degree,False,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_2ASVLC9oTQeLJaR,5eb234b5deb70a6af225f65a,Somewhat disagree,Bachelor's degree,False,-31.682376623376626,9.536669552669558,The empirical studies in the literature can be classified based on their main goal into five broad categories: Studies (i) investigating the importance and impact of documentation in the software life cycle; (ii) describing developers issues and concerns when dealing with software documentation; (iii) investigating the quality attributes required in documentation artifacts; (iv) providing guidelines and recommendations on how to write and maintain documentation; and (v) proposing frameworks and tools for assessing developers' concerns in this context.,"(Empirical) Studies. A variety of empirical studies have targeted software documentation artifacts aiming at (i) investigating its importance and impact in software life cycle, (ii) describing developers issues and concerns when dealing with software documentation, (iii) investigating the quality attributes required in documentation artifacts, (iv) providing guidelines and recommendations for constructing it, and (v) proposing frameworks and tools for assessing developers' concern in this context (such as cost, benefit and quality attributes).",2.2273766233766423,16.77444155844156,-29.454999999999984,26.311111111111117
R_3j6j0BQtCMvAnnu,5eb234b5deb70a6af225f6fd,Somewhat agree,Master's degree,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_3oGCHD9qcEOjEKR,5eb234b5deb70a6af225f6fd,Neither agree nor disagree,PhD,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_5gRs3GUMGwIrEuB,5eb234b5deb70a6af225f6fd,Somewhat agree,Master's degree,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_2azQGqyzdiTkvn2,5eb234b5deb70a6af225f6fd,Neither agree nor disagree,Professor,True,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_2ALKUVr0LclXonG,5eb234b5deb70a6af225f6fd,Somewhat agree,Master's degree,True,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_2fv6Pk7Rjmr7FVf,5eb234b5deb70a6af225f6fd,Somewhat disagree,PhD,False,-18.969550342130987,8.442521994134895,"Tools & Approaches. A plethora of works have been focused on supporting the automated generation and retrieval. For example, software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been porposed for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code snippets, and user stories.","Software summarization techniques and tools with the goal of providing abstractive and extractive summaries has been studied for a diverse set of software artifacts, such as bug reports, classes and methods, unit tests, commit messages, release notes, user reviews, code examples and user stories.",23.48091397849464,15.118387096774198,4.5113636363636545,23.560909090909092
R_3j6j0BQtCMvAnnu,5eb234c6deb70a6af2260571,Strongly disagree,Master's degree,False,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_2flXhbfNu9VL2p8,5eb234c6deb70a6af2260571,Somewhat agree,Professor,False,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_5gRs3GUMGwIrEuB,5eb234c6deb70a6af2260571,Neither agree nor disagree,Master's degree,True,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_2sXVfZ8M2bTm0sA,5eb234c6deb70a6af2260571,Strongly agree,PhD,True,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_RfYDkz12aApKVuF,5eb234c6deb70a6af2260571,Somewhat agree,Bachelor's degree,True,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_2ASVLC9oTQeLJaR,5eb234c6deb70a6af2260571,Somewhat disagree,Bachelor's degree,False,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_2fv6Pk7Rjmr7FVf,5eb234c6deb70a6af2260571,Neither agree nor disagree,PhD,True,-35.3009984984985,13.246114447781117,"Completeness accounts for %53 of issues in this section. We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.971944444444489,22.34820987654321,-28.329054054054012,35.594324324324326
R_3j6j0BQtCMvAnnu,5eb234c6deb70a6af225fbb3,Somewhat disagree,Master's degree,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_3oGCHD9qcEOjEKR,5eb234c6deb70a6af225fbb3,Somewhat agree,PhD,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_2ASVLC9oTQeLJaR,5eb234c6deb70a6af225fbb3,Somewhat agree,Bachelor's degree,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_2fv6Pk7Rjmr7FVf,5eb234c6deb70a6af225fbb3,Neither agree nor disagree,PhD,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_1hySrlplH6qf42Z,5eb234c6deb70a6af225fbb3,Neither agree nor disagree,Master's degree,False,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_2QiKL3vV8VYIJkJ,5eb234c6deb70a6af225fbb3,Somewhat agree,Bachelor's degree,True,-34.41262548262546,12.74956241956242,"Example: The incompleteness could raise from different things such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported""). Fig 4.4 illustrate other type of missing information we observed.","Example: We observed different causes of incompleteness such as missing explanation (e.g.,**""is there any idea what ""frequently used"" might mean?""), a component in a library (e.g.,**""The documentation on [...] is missing information about the toolbar buttons""), API behavior clarification (e.g.,**""I think that we should add documentation ensuring that the user passes a tree with reset bounds""), or compatibility information (e.g.,**""Explicitly mention if clang 4.x, 5.x are supported"").",6.083571428571446,22.844761904761906,-28.329054054054012,35.594324324324326
R_2flXhbfNu9VL2p8,5eb23451deb70a6af224e429,Neither agree nor disagree,Professor,False,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_2ALKUVr0LclXonG,5eb23451deb70a6af224e429,Neither agree nor disagree,Master's degree,True,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_2QiKL3vV8VYIJkJ,5eb23451deb70a6af224e429,Somewhat agree,Bachelor's degree,False,-10.301025498891363,4.542134762256712,"However, the main purpose of those code refactoring/clean up tasks is to improve the code understandability. Variable and method renaming refactoring (i.e., renaming a variable or method to better reflect its functionality) is the most common way to make the code easier to comprehend. Also popular are code transformations aimed at replacing literal values with variables or splitting long functions through extract method refactoring. The latter allows not only to foster comprehensibility, but also the reusability of small code snippets.","However, the main purpose of those code refactoring/clean up tasks is to improve the code comprehensibility without touching any documentation. Variable and method renaming refactoring (i.e., renaming a variable or method to better fit its functionality) is the most common way to make the code easier to understand. Also, variable and method extract refactoring (i.e., replacing literal values or inner method code blocks by introducing new variables or methods) is a standard approach to not only avoid existing or potential redundant code, but also better present and explain the implementation logic of the extracted code snippets.",17.859207317073185,15.861097560975612,7.558181818181822,20.403232323232324
R_2flXhbfNu9VL2p8,5eb23451deb70a6af224d76a,Neither agree nor disagree,Professor,False,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_3oGCHD9qcEOjEKR,5eb23451deb70a6af224d76a,Somewhat disagree,PhD,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_1OkIm6nj0z1aQC9,5eb23451deb70a6af224d76a,Strongly disagree,Master's degree,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_2ALKUVr0LclXonG,5eb23451deb70a6af224d76a,Somewhat agree,Master's degree,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_2ASVLC9oTQeLJaR,5eb23451deb70a6af224d76a,Somewhat disagree,Bachelor's degree,False,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_2QiKL3vV8VYIJkJ,5eb23451deb70a6af224d76a,Somewhat disagree,Bachelor's degree,True,-13.510714285714272,6.604603174603174,"While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer. For researchers, this is an opportunity to study test breaking-changes and to develop techniques able to alert the developer when a change she implemented might require a double check of (part of) the test suite. For practitioners, continuous integration practices can help in timely spotting these issues in most of cases.","While in the cases we analyzed the issue was spotted and fixed quickly by the developer, there might be non-trivial cases in which only a subset of the test suite is executed for regression testing (e.g., due to a limited testing budget) and a non-executed broken test is not identified by the developer.",19.83571428571429,19.18761904761905,6.325000000000017,25.792222222222225
R_2flXhbfNu9VL2p8,5eb23451deb70a6af224dcd2,Somewhat agree,Professor,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_3oGCHD9qcEOjEKR,5eb23451deb70a6af224dcd2,Neither agree nor disagree,PhD,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_RfYDkz12aApKVuF,5eb23451deb70a6af224dcd2,Somewhat agree,Bachelor's degree,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_2t3j9LGzc1rnx28,5eb23451deb70a6af224dcd2,Neither agree nor disagree,PhD,False,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_2ALKUVr0LclXonG,5eb23451deb70a6af224dcd2,Somewhat agree,Master's degree,False,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_eSf9paDm2rsJ9sd,5eb23451deb70a6af224dcd2,Somewhat disagree,PhD,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_1hySrlplH6qf42Z,5eb23451deb70a6af224dcd2,Neither agree nor disagree,Master's degree,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_2f2tFJpolzgEViB,5eb23451deb70a6af224dcd2,Somewhat agree,Master's degree,True,-25.660425265791133,9.872620387742339,"Sliwerski et al. studied the day of the week and the size of commits on two completely different projects, Eclipse and Mozilla. They found that the commits on Friday were the buggiest, and large commits were more likely to contain bugs.","Sliwerski et al., studied the day of the week and size of commits for two totally different projects, Eclipse and Mozilla, and found that the commits on Fridays are buggiest and large commits are more likely to contain bugs.",67.09504065040652,7.296097560975612,41.434615384615384,17.16871794871795
R_2flXhbfNu9VL2p8,5eb23455deb70a6af225135a,Somewhat disagree,Professor,False,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_3oGCHD9qcEOjEKR,5eb23455deb70a6af225135a,Strongly disagree,PhD,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_5gRs3GUMGwIrEuB,5eb23455deb70a6af225135a,Somewhat agree,Master's degree,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_2azQGqyzdiTkvn2,5eb23455deb70a6af225135a,Somewhat disagree,Professor,False,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_eSf9paDm2rsJ9sd,5eb23455deb70a6af225135a,Neither agree nor disagree,PhD,False,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_1hySrlplH6qf42Z,5eb23455deb70a6af225135a,Strongly disagree,Master's degree,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_2QiKL3vV8VYIJkJ,5eb23455deb70a6af225135a,Somewhat agree,Bachelor's degree,True,-19.081305084745765,3.2079999999999984,The remainder of the paper is structured as follows. We review related work in Section 2. In Section 3 we describe our study design to investigate the research questions. Then our results are present in Section 4. We declare the threats to validity in Section 5 and conclude our findings in Section 6.,"The remainder of the paper is structured as follows. We review related literature in Section 2. In Section 3 we describe the study design we adopted to answer our research question. The achieved results are presented in Section 4. Section 5 discuss the threats that could affect the validity of our study, while Section 6 summarizes our observations and outlines directions for future work.",49.041000000000025,8.804000000000002,29.95969491525426,12.012
R_2flXhbfNu9VL2p8,5eb23455deb70a6af2251726,Somewhat disagree,Professor,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_3oGCHD9qcEOjEKR,5eb23455deb70a6af2251726,Somewhat agree,PhD,False,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_1OkIm6nj0z1aQC9,5eb23455deb70a6af2251726,Somewhat agree,Master's degree,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2azQGqyzdiTkvn2,5eb23455deb70a6af2251726,Somewhat disagree,Professor,False,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_27lOIpRqcbfjcfD,5eb23455deb70a6af2251726,Somewhat disagree,PhD,True,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2ALKUVr0LclXonG,5eb23455deb70a6af2251726,Somewhat disagree,Master's degree,False,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2fv6Pk7Rjmr7FVf,5eb23455deb70a6af2251726,Neither agree nor disagree,PhD,False,-29.689770685289517,3.934103160989949,"Although these types of changes are typically not due to code-comment inconsistencies, we found cases where the comment contained references to other source code elements, or links to, for instance, bug reports. These cases can be considered dangerous from the inconsistency point of view, hence, we marked these as well in the taxonomy.","Although these types of changes are usually not performed because of code-comment inconsistencies, we found cases where the comment contained references, for example, to other source code elements or bug reports. These cases can be considered dangerous from an inconsistency point of view, as invalid/outdated references can be disturbing in the code. For example in Google Guava a commit says: ""Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface"".",34.680896226415086,15.00537735849057,4.9911255411255695,18.93948051948052
R_2flXhbfNu9VL2p8,5eb234b5deb70a6af225d7d1,Somewhat agree,Professor,False,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_27lOIpRqcbfjcfD,5eb234b5deb70a6af225d7d1,Strongly agree,PhD,True,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_1hySrlplH6qf42Z,5eb234b5deb70a6af225d7d1,Strongly disagree,Master's degree,True,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_2f2tFJpolzgEViB,5eb234b5deb70a6af225d7d1,Strongly disagree,Master's degree,True,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_2QiKL3vV8VYIJkJ,5eb234b5deb70a6af225d7d1,Strongly agree,Bachelor's degree,False,-27.932371794871813,7.001353276353278,"Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches and (empirical) studies. In the following, we summarize the closest ones to ours.","Previous studies have investigated software documentation from different aspects, mainly focusing on tools & approaches for manual and automated documentation, and (empirical) studies aimed at investigation different aspects such as documentation issues, developer concerns, among other. In the following, we summarize the closest ones to our with special emphasis on the empirical studies.",8.265833333333376,15.460185185185185,-19.666538461538437,22.461538461538463
R_2flXhbfNu9VL2p8,5eb234b5deb70a6af225dbd8,Somewhat agree,Professor,True,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_2sXVfZ8M2bTm0sA,5eb234b5deb70a6af225dbd8,Strongly disagree,PhD,False,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_2t3j9LGzc1rnx28,5eb234b5deb70a6af225dbd8,Somewhat agree,PhD,True,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_1OkIm6nj0z1aQC9,5eb234b5deb70a6af225dbd8,Strongly agree,Master's degree,True,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_1hySrlplH6qf42Z,5eb234b5deb70a6af225dbd8,Strongly agree,Master's degree,True,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_2f2tFJpolzgEViB,5eb234b5deb70a6af225dbd8,Somewhat agree,Master's degree,True,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_2QiKL3vV8VYIJkJ,5eb234b5deb70a6af225dbd8,Somewhat agree,Bachelor's degree,False,-20.835000000000008,8.868333333333332,"Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is an insight into the types of documentation that practitioners perceive as useful when confronted with specific software engineering tasks. Therefore, we formulate our second RQ as:.","Moreover, since our goal is to further research in the context of documentation recommender systems, the second contribution of this paper is a study with practitioners to understand what types of documentation they perceive as useful when confronted with specific software engineering tasks, to answer our second RQ:.",11.512500000000017,17.615833333333335,-9.322499999999991,26.484166666666667
R_2flXhbfNu9VL2p8,5eb234c6deb70a6af2260959,Strongly agree,Professor,True,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_1OkIm6nj0z1aQC9,5eb234c6deb70a6af2260959,Neither agree nor disagree,Master's degree,False,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_27lOIpRqcbfjcfD,5eb234c6deb70a6af2260959,Strongly disagree,PhD,False,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_2f2tFJpolzgEViB,5eb234c6deb70a6af2260959,Somewhat disagree,Master's degree,False,-41.13767282010994,15.302352710133544,"Interestingly, in another thread of the Apache httpd mailing list they discuss an issue of harmful warning messages originating from meta-information they also use to enforce up-to-dateness of different translations. As they conclude, ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".","However, we found one case in Apache httpd documentation mailing list where the traceability information between translations of a document was still managed manually, e.g., by adding a line of comment at top of translations referring to original document and more particularly ""The whole point of the comment is to see which exact revisions of the original file you have to diff to see the changes."".",30.97065789473683,16.019736842105267,-10.16701492537311,31.32208955223881
R_3oGCHD9qcEOjEKR,5eb23431deb70a6af2247fa8,Somewhat agree,PhD,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_5gRs3GUMGwIrEuB,5eb23431deb70a6af2247fa8,Strongly agree,Master's degree,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2sXVfZ8M2bTm0sA,5eb23431deb70a6af2247fa8,Strongly agree,PhD,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_1OkIm6nj0z1aQC9,5eb23431deb70a6af2247fa8,Strongly agree,Master's degree,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2ASVLC9oTQeLJaR,5eb23431deb70a6af2247fa8,Somewhat agree,Bachelor's degree,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_eSf9paDm2rsJ9sd,5eb23431deb70a6af2247fa8,Somewhat agree,PhD,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2fv6Pk7Rjmr7FVf,5eb23431deb70a6af2247fa8,Neither agree nor disagree,PhD,True,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_1hySrlplH6qf42Z,5eb23431deb70a6af2247fa8,Somewhat agree,Master's degree,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_2f2tFJpolzgEViB,5eb23431deb70a6af2247fa8,Neither agree nor disagree,Master's degree,False,-8.363491803278663,3.8992459016393433,"The evaluator also had to assign a negative, neutral, or positive sentiment to the reported opinion and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked library, and (ii) the quality aspect(s).","The evaluator also had to assign a negative or positive sentiment to the reported opinion (this information will be used in the context of the opinion miner) and, finally, she had to identify in the selected part of the sentence the lexical tokes (e.g., noun, pronoun, adjective, etc.) referring to: (i) the linked API, and (ii) the quality aspect(s).",2.1129999999999995,25.386000000000003,-6.250491803278663,29.285245901639346
R_3oGCHD9qcEOjEKR,5eb234b5deb70a6af225d63e,Strongly agree,PhD,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_5gRs3GUMGwIrEuB,5eb234b5deb70a6af225d63e,Strongly agree,Master's degree,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_RfYDkz12aApKVuF,5eb234b5deb70a6af225d63e,Somewhat disagree,Bachelor's degree,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_1OkIm6nj0z1aQC9,5eb234b5deb70a6af225d63e,Neither agree nor disagree,Master's degree,False,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_eSf9paDm2rsJ9sd,5eb234b5deb70a6af225d63e,Neither agree nor disagree,PhD,True,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_2fv6Pk7Rjmr7FVf,5eb234b5deb70a6af225d63e,Somewhat agree,PhD,False,-7.367500000000007,0.9034042553191526,"To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand. This has led to a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).","To overcome this deadlock, recent research initiatives have advocated for the development of automated context-aware recommender systems that automatically generate high-quality documentation, contextual to any given task at hand; and exemplified by a first wave of automated approaches for the generation and recommendation of documentation (e.g.,).",-18.44999999999996,21.795,-25.817499999999967,22.698404255319154
R_3oGCHD9qcEOjEKR,5eb234c6deb70a6af2261c0c,Strongly agree,PhD,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_1OkIm6nj0z1aQC9,5eb234c6deb70a6af2261c0c,Strongly agree,Master's degree,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_2ALKUVr0LclXonG,5eb234c6deb70a6af2261c0c,Strongly agree,Master's degree,False,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_eSf9paDm2rsJ9sd,5eb234c6deb70a6af2261c0c,Neither agree nor disagree,PhD,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_2QiKL3vV8VYIJkJ,5eb234c6deb70a6af2261c0c,Strongly agree,Bachelor's degree,True,-12.787941176470582,6.503790849673205,"Common Solution: Writing script was the most adopted solution regarding the automatic documentation deployment. Concerning the missing features there was no specific solution and individuals usually were pointed to different possible alternatives (e.g.,).","Common Solution: Writing script is the most adopted solution regarding the automatic documentation deployment, while regarding the missing features there was no common solution (if any) and individuals usually points to different possible alternatives (e.g.,).",-11.967058823529385,19.151764705882353,-24.754999999999967,25.65555555555556
R_5gRs3GUMGwIrEuB,5eb233fadeb70a6af2237a20,Somewhat agree,Master's degree,True,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_2sXVfZ8M2bTm0sA,5eb233fadeb70a6af2237a20,Strongly disagree,PhD,True,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_RfYDkz12aApKVuF,5eb233fadeb70a6af2237a20,Somewhat disagree,Bachelor's degree,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_2t3j9LGzc1rnx28,5eb233fadeb70a6af2237a20,Neither agree nor disagree,PhD,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_1OkIm6nj0z1aQC9,5eb233fadeb70a6af2237a20,Somewhat disagree,Master's degree,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_2azQGqyzdiTkvn2,5eb233fadeb70a6af2237a20,Neither agree nor disagree,Professor,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_27lOIpRqcbfjcfD,5eb233fadeb70a6af2237a20,Somewhat agree,PhD,False,-36.44935698447895,6.077664449371769,"Our goal is to understand whether refactoring can improve the naturalness of code. For this reason, here we assess how the code naturalness is impacted by both overall and specific types of refactorings.","Our goal is to investigate whether refactoring operations increase the naturalness of the refactored code. We assess how the code naturalness is impacted (i) overall, meaning when considering all types of refactoring operations together, and (ii) by specific types of refactoring.",38.832954545454555,11.941969696969698,2.383597560975602,18.019634146341467
R_5gRs3GUMGwIrEuB,5eb234c6deb70a6af2261837,Neither agree nor disagree,Master's degree,True,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_2sXVfZ8M2bTm0sA,5eb234c6deb70a6af2261837,Strongly disagree,PhD,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_RfYDkz12aApKVuF,5eb234c6deb70a6af2261837,Somewhat disagree,Bachelor's degree,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_2t3j9LGzc1rnx28,5eb234c6deb70a6af2261837,Strongly agree,PhD,True,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_2azQGqyzdiTkvn2,5eb234c6deb70a6af2261837,Somewhat agree,Professor,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_2ALKUVr0LclXonG,5eb234c6deb70a6af2261837,Somewhat agree,Master's degree,True,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_eSf9paDm2rsJ9sd,5eb234c6deb70a6af2261837,Neither agree nor disagree,PhD,False,-22.124219457013595,6.439660633484163,"Interestingly, we observed that developers adopt preventative solutions to ensure the up-to-dateness of the project's documentation. For example, some projects have added documentation up-to-dateness as one of the items to check in the contribution to-do list, and others have pushed this forward by making Javadoc update mandatory for pull request acceptance.","Some developers adopt preventative solutions to ensure the documentation up-to-dateness, adding documentation up-to-dateness as one of the items to check in the contribution to-do list, or even pushing this forward by making Javadoc update mandatory for pull request acceptance.",-1.5180882352940728,19.805980392156865,-23.642307692307668,26.245641025641028
R_2sXVfZ8M2bTm0sA,5eb23451deb70a6af224d789,Strongly agree,PhD,False,-24.218636363636392,6.607575757575756,"In addition to that, we used lexical patterns to identify candidate remedy commits. While these lexical patterns can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.","While the lexical pattern defined to automatically identify remedy commits can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.",25.795000000000044,14.630000000000003,1.5763636363636522,21.237575757575758
R_2t3j9LGzc1rnx28,5eb23451deb70a6af224d789,Strongly agree,PhD,True,-24.218636363636392,6.607575757575756,"In addition to that, we used lexical patterns to identify candidate remedy commits. While these lexical patterns can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.","While the lexical pattern defined to automatically identify remedy commits can return false positives, these have been excluded in our study through manual validation, thus do not influencing our findings in any way.",25.795000000000044,14.630000000000003,1.5763636363636522,21.237575757575758
R_2sXVfZ8M2bTm0sA,5eb23455deb70a6af22507c3,Strongly disagree,PhD,False,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_2ASVLC9oTQeLJaR,5eb23455deb70a6af22507c3,Somewhat disagree,Bachelor's degree,False,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_eSf9paDm2rsJ9sd,5eb23455deb70a6af22507c3,Neither agree nor disagree,PhD,True,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_1hySrlplH6qf42Z,5eb23455deb70a6af22507c3,Strongly disagree,Master's degree,False,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_2QiKL3vV8VYIJkJ,5eb23455deb70a6af22507c3,Somewhat disagree,Bachelor's degree,True,-13.70081672893312,3.691388542963887,"For instance, in a commit of QR Code generator a comment describing how an array element of the QR code is calculated was fixed (following a copy-paste mistake). In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases when the fix was in an example code inside the comment (see).","In WordPress for Android, the previously misleading comment of the ""getPath()"" method was replaced from ""descendants must implement this to send their specific request to the stats api"" to ""descendants must implement this to return their specific path to the stats rest api"". We also observed interesting cases in which the comment was fixed to update a code usage example reported in the comment and not aligned with the actual code implementation (see).",38.62530303030303,15.159090909090912,24.92448630136991,18.8504794520548
R_RfYDkz12aApKVuF,5eb23452deb70a6af224face,Somewhat agree,Bachelor's degree,True,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_1OkIm6nj0z1aQC9,5eb23452deb70a6af224face,Strongly disagree,Master's degree,True,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_2ASVLC9oTQeLJaR,5eb23452deb70a6af224face,Somewhat agree,Bachelor's degree,True,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_2fv6Pk7Rjmr7FVf,5eb23452deb70a6af224face,Neither agree nor disagree,PhD,False,-17.53595142602495,4.4126336898395735,"Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed . They found that ""as is"" or ad-hoc reuse is a common practice in commercial software development.","Sojer and Henkel focused on the legal and economic risks of code reuse from the Internet. They surveyed 869 professional software developers to investigate if the reuse of code snippets from internet is a common practice in commercial software development. They found that the 88% developers reuse internet code and the 19% of them consider reuse as a very important activity for their work. Furthermore, the analysis shows a growth in the importance of internet code reuse in recent years.",51.01401960784315,8.959411764705884,33.4780681818182,13.372045454545457
R_RfYDkz12aApKVuF,5eb234c6deb70a6af225fee2,Somewhat agree,Bachelor's degree,True,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_27lOIpRqcbfjcfD,5eb234c6deb70a6af225fee2,Neither agree nor disagree,PhD,False,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_2ASVLC9oTQeLJaR,5eb234c6deb70a6af225fee2,Neither agree nor disagree,Bachelor's degree,False,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_eSf9paDm2rsJ9sd,5eb234c6deb70a6af225fee2,Neither agree nor disagree,PhD,True,-14.562835134053614,6.585734293717486,"Referring to deprecated information is another reason for up-to-dateness issues and can affect several types of documentation in different ways. It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".","Referring to deprecated information is also one of the main reasons for up-to-dateness issues, and can affect several types of documentation in different ways: It includes having deprecated information in the project's website (e.g.,**""homepage recommends deprecated commands""), outdated copyright information and version numbers in the code base, as well as outdated references (e.g., links to old versions of the system in the documentation), which was the most prevalent issue within this category. For example, one user reported that ""the example linked in the documentation is using the 3.x version of the API, and that may be confusing to readers"".",7.068129251700697,20.388775510204084,-7.494705882352918,26.97450980392157
R_2t3j9LGzc1rnx28,5eb234c6deb70a6af225fed1,Strongly agree,PhD,True,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_2azQGqyzdiTkvn2,5eb234c6deb70a6af225fed1,Neither agree nor disagree,Professor,True,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_27lOIpRqcbfjcfD,5eb234c6deb70a6af225fed1,Strongly disagree,PhD,True,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_1hySrlplH6qf42Z,5eb234c6deb70a6af225fed1,Somewhat agree,Master's degree,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_2f2tFJpolzgEViB,5eb234c6deb70a6af225fed1,Somewhat agree,Master's degree,False,-53.9942759295499,18.710371819960862,"(Empirical) Studies. Software documentation has been analyzed in diverse empirical studies that (i) report evidence of its importance and impact in the software life cycle, (ii) describe problems that developers face when dealing with it, (iii) list quality attributes required in documentation, (iv) provide recommendations for constructing it (including standards), and (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes. Due to space limitations we summarize the closest ones to our study in Table [tab:related_SwTechDocWorks].","On the other side, documentation has been analyzed with a diversity of empirical studies that (i) report evidence of its importance and impact in the software cycle development, (ii) describe problems developers face when dealing with it, (iii) list quality attributes required in software documentation, (iv) provide recommendations for constructing it (including standards) , or (v) propose frameworks and tools for evaluating documentation concerns such as cost, benefit and quality attributes of software documentation.",0.1507142857143151,20.19428571428572,-53.843561643835585,38.90465753424658
R_1OkIm6nj0z1aQC9,5eb23451deb70a6af224df39,Somewhat disagree,Master's degree,True,-19.052714741398944,5.721414900888583,"Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers. To mitigate subjectivity bias in such a process, every commit was assigned to two authors who manually analyzed it independently. Then, in the case of a disagreement, a third author was assigned to the commit to solve the conflict.","Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers.",22.570346320346346,16.48753246753247,3.5176315789474017,22.208947368421054
R_2azQGqyzdiTkvn2,5eb23451deb70a6af224df39,Somewhat agree,Professor,True,-19.052714741398944,5.721414900888583,"Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers. To mitigate subjectivity bias in such a process, every commit was assigned to two authors who manually analyzed it independently. Then, in the case of a disagreement, a third author was assigned to the commit to solve the conflict.","Threats to construct validity concern the relation between the theory and the observation, and in this work are mainly due to the manual analysis we performed to identify the reasons behind the quick remedy changes performed by developers.",22.570346320346346,16.48753246753247,3.5176315789474017,22.208947368421054
R_2ALKUVr0LclXonG,5eb233fadeb70a6af2237939,Strongly disagree,Master's degree,False,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_2ASVLC9oTQeLJaR,5eb233fadeb70a6af2237939,Somewhat disagree,Bachelor's degree,False,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_eSf9paDm2rsJ9sd,5eb233fadeb70a6af2237939,Neither agree nor disagree,PhD,False,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_2fv6Pk7Rjmr7FVf,5eb233fadeb70a6af2237939,Neither agree nor disagree,PhD,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_1hySrlplH6qf42Z,5eb233fadeb70a6af2237939,Somewhat agree,Master's degree,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_2f2tFJpolzgEViB,5eb233fadeb70a6af2237939,Strongly agree,Master's degree,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
R_2QiKL3vV8VYIJkJ,5eb233fadeb70a6af2237939,Somewhat disagree,Bachelor's degree,True,-7.141341463414619,3.728780487804876,"After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness. In the end, we obtained 1,448 refactoring operations from 619 projects, while no relevant refactorings are detected in the other 881 projects.","After obtaining all the commits with refactoring operations, we filtered out commits involved in which more than one refactoring type was applied, again to better isolate and study the effect of a single type of refactoring operation on the code naturalness.",11.41500000000002,19.120000000000005,4.273658536585401,22.84878048780488
